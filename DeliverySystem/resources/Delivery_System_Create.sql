-- Created by Shiva Krishna Komuravelly
-- Version: 0.0.0.1


-- tables
-- Table: DELIVERY_REQUEST
-- Delivery Requests are stored here

CREATE TABLE DELIVERY_REQUEST (
    DELIVERY_REQ_ID varchar2(20)  NOT NULL,
    DELIVERY_REQ_DATE timestamp  NOT NULL,
    USER_ID varchar2(50)  NOT NULL,
    STATUS_ID integer  NOT NULL,
    FROM_ADDR_LINE1 varchar2(50)  NOT NULL,
    FROM_ADDR_LINE2 varchar2(50)  NOT NULL,
    FROM_CITY varchar2(50)  NOT NULL,
    FROM_STATE varchar2(50)  NOT NULL,
    FROM_COUNTRY varchar2(50)  NOT NULL,
    TO_ADDR_LINE1 varchar2(50)  NOT NULL,
    TO_ADDR_LINE2 varchar2(50)  NOT NULL,
    TO_CITY varchar2(50)  NOT NULL,
    TO_STATE varchar2(50)  NOT NULL,
    TO_COUNTRY varchar2(50)  NOT NULL,
    FROM_ZIPCODE integer  NOT NULL,
    TO_ZIPCODE integer  NOT NULL,
    TOTAL_WEIGHT_RANGE varchar2(30)  NOT NULL,
    TOTAL_COST number(10,3)  DEFAULT 0 NULL,
    PH_NUMBER_TO_CONTACT integer  NOT NULL,
    TOTAL_WEIGHT number(10,3)  DEFAULT 0 NULL,
    PAYMENT_STATUS varchar2(20)  DEFAULT TO_PAY NOT NULL,
    DELIVERY_STATUS_ID integer  NOT NULL,
    REQUESTED_DATETIME timestamp  NULL,
    LAST_UPDATED_DATETIME timestamp  NOT NULL,
    CONSTRAINT DELIVERY_REQUEST_pk PRIMARY KEY (DELIVERY_REQ_ID)
) ;



-- Table: DELIVERY_REQUEST_STATUS
-- DELIVERY_REQUEST_STATUS

CREATE TABLE DELIVERY_REQUEST_STATUS (
    REQUEST_ID varchar2(10)  NOT NULL,
    STATUS_ID integer  NOT NULL,
    DATE_TIME_OF_ACTION timestamp  NOT NULL,
    CONSTRAINT DELIVERY_REQUEST_STATUS_pk PRIMARY KEY (REQUEST_ID)
) ;



-- Table: DELIVERY_REQ_DETAILS
-- Delivery Request Details

CREATE TABLE DELIVERY_REQ_DETAILS (
    ITEM_NO integer  NOT NULL,
    DELIVERY_REQ_ID varchar2(20)  NOT NULL,
    ITEM_NAME varchar2(20)  NOT NULL,
    ITEM_WEIGHT number(10,3)  NOT NULL,
	ITEM_WEIGHT_RANGE varchar2(50)  NOT NULL,
    ITEM_DESCRIPITION varchar2(50)  NULL,
    QUANTITY integer  DEFAULT 1 NOT NULL,
	COST number(10,3)  DEFAULT 0 NOT NULL,
    CONSTRAINT ITEM_QTY_POS_INT_CHK CHECK (>0) NOT DEFERRABLE   INITIALLY IMMEDIATE ,
    CONSTRAINT DELIVERY_REQ_DETAILS_pk PRIMARY KEY (ITEM_NO,DELIVERY_REQ_ID)
) ;



-- Table: FROM_TO_STATUS
-- Transition of Status "from Status" and "To Status" are stored here.

CREATE TABLE FROM_TO_STATUS (
    STATUS_ID integer  NOT NULL,
    TO_STATUS_ID integer  NOT NULL,
    CONSTRAINT FROM_TO_STATUS_pk PRIMARY KEY (STATUS_ID,TO_STATUS_ID)
) ;



-- Table: PERMISSION
-- Permissions of the system

CREATE TABLE PERMISSION (
    PERMISSION_ID integer  NOT NULL,
    PERMISSION_NAME varchar2(20)  NOT NULL,
    PERMISSION_DESCRIPTION varchar2(50)  NOT NULL,
    CONSTRAINT PERMISSION_pk PRIMARY KEY (PERMISSION_ID)
) ;



-- Table: ROLE
-- Role Details of the System

CREATE TABLE ROLE (
    ROLE_ID integer  NOT NULL,
    ROLE_NAME varchar2(20)  NOT NULL,
    ROLE_DESCRIPTION varchar2(50)  NOT NULL,
    CONSTRAINT ROLE_pk PRIMARY KEY (ROLE_ID)
) ;



-- Table: ROLE_PERMISSION
-- Relation between role and permission

CREATE TABLE ROLE_PERMISSION (
    ROLE_PERMISSION_ID integer  NOT NULL,
    ROLE_PERMISSION_DESC varchar2(50)  NOT NULL,
    PERMISSION_ID integer  NOT NULL,
    ROLE_ID integer  NOT NULL,
    CONSTRAINT ROLE_PERMISSION_AKEY_001 UNIQUE (ROLE_ID, PERMISSION_ID),
    CONSTRAINT ROLE_PERMISSION_pk PRIMARY KEY (ROLE_PERMISSION_ID)
) ;



-- Table: STATUS_MASTER
-- STATUS_MASTER

CREATE TABLE STATUS_MASTER (
    STATUS_ID integer  NOT NULL,
    STATUS_NAME varchar2(20)  NOT NULL,
    STATUS_DESCRIPTION varchar2(50)  NOT NULL,
    CONSTRAINT STATUS_MASTER_pk PRIMARY KEY (STATUS_ID)
) ;



-- Table: USERS
-- Users of the system are stored here

CREATE TABLE USERS (
    USER_ID varchar2(50)  NOT NULL,
    USER_NAME varchar2(20)  NOT NULL,
    PASSWORD varchar2(100)  NOT NULL,
    CREATED_DATE timestamp  NOT NULL,
    MODIFIED_DATE timestamp  NOT NULL,
    MOBILE_NUMBER integer  NOT NULL,
    ALTERNATE_MOBILE_NUMBER integer  NULL,
    CONSTRAINT USERS_pk PRIMARY KEY (USER_ID)
) ;


CREATE INDEX UserId_Idx 
on USERS 
(USER_ID ASC)
;



-- Table: USER_ROLE_PERMISSION
-- Roles attached to Users - Relation between Role and User

CREATE TABLE USER_ROLE_PERMISSION (
    USER_ID varchar2(50)  NOT NULL,
    ROLE_PERMISSION_ID integer  NOT NULL,
    USER_ROLE_DESCRIPTION varchar2(50)  NOT NULL,
    CONSTRAINT USER_ROLE_PERMISSION_pk PRIMARY KEY (USER_ID,ROLE_PERMISSION_ID)
) ;



-- Table: ZIPCODE_COSTS
-- Cost Incurred for delivery from FROM_ZIPCODE to TO_ZIPCODE based on weight

CREATE TABLE ZIPCODE_COSTS (
    FROM_ZIPCODE integer  NOT NULL,
    TO_ZIPCODE integer  NOT NULL,
    WEIGHT_RANGE varchar2(30)  NOT NULL,
    COST number(10,3)  NOT NULL,
    CONSTRAINT ZIPCODE_COSTS_pk PRIMARY KEY (FROM_ZIPCODE,TO_ZIPCODE,WEIGHT_RANGE)
) ;



-- Table: ZIPCODE_MASTER
-- Zip Codes available in the System

CREATE TABLE ZIPCODE_MASTER (
    ZIPCODE integer  NOT NULL,
    ZIPCODE_DESC varchar2(50)  NOT NULL,
    CONSTRAINT ZIPCODE_MASTER_pk PRIMARY KEY (ZIPCODE)
) ;







-- foreign keys
-- Reference:  DELIVERY_REQUEST_FKEY_001 (table: DELIVERY_REQ_DETAILS)


ALTER TABLE DELIVERY_REQ_DETAILS ADD CONSTRAINT DELIVERY_REQUEST_FKEY_001 
    FOREIGN KEY (DELIVERY_REQ_ID)
    REFERENCES DELIVERY_REQUEST (DELIVERY_REQ_ID)
    ;

-- Reference:  DELIVERY_REQUEST_STATUS_MASTER (table: DELIVERY_REQUEST)


ALTER TABLE DELIVERY_REQUEST ADD CONSTRAINT DELIVERY_REQUEST_STATUS_MASTER 
    FOREIGN KEY (STATUS_ID)
    REFERENCES STATUS_MASTER (STATUS_ID)
    ;

-- Reference:  DELIVERY_REQUEST_USERS (table: DELIVERY_REQUEST)


ALTER TABLE DELIVERY_REQUEST ADD CONSTRAINT DELIVERY_REQUEST_USERS 
    FOREIGN KEY (USER_ID)
    REFERENCES USERS (USER_ID)
    ;

-- Reference:  DELIVERY_REQUEST_ZIPCODE_COSTS (table: DELIVERY_REQUEST)


ALTER TABLE DELIVERY_REQUEST ADD CONSTRAINT DELIVERY_REQUEST_ZIPCODE_COSTS 
    FOREIGN KEY (FROM_ZIPCODE,TO_ZIPCODE,TOTAL_WEIGHT_RANGE)
    REFERENCES ZIPCODE_COSTS (FROM_ZIPCODE,TO_ZIPCODE,WEIGHT_RANGE)
    ;

-- Reference:  DELIVERY_REQ_STATUS_FKEY_001 (table: DELIVERY_REQUEST)
-- Delivery Request Status Foreign Key


ALTER TABLE DELIVERY_REQUEST ADD CONSTRAINT DELIVERY_REQ_STATUS_FKEY_001 
    FOREIGN KEY (DELIVERY_STATUS_ID)
    REFERENCES STATUS_MASTER (STATUS_ID)
    ;

-- Reference:  DEL_REQ_STATUS_FKEY_001 (table: DELIVERY_REQUEST_STATUS)


ALTER TABLE DELIVERY_REQUEST_STATUS ADD CONSTRAINT DEL_REQ_STATUS_FKEY_001 
    FOREIGN KEY (STATUS_ID)
    REFERENCES STATUS_MASTER (STATUS_ID)
    ;

-- Reference:  FROM_TO_STATUS_FKEY_001 (table: FROM_TO_STATUS)


ALTER TABLE FROM_TO_STATUS ADD CONSTRAINT FROM_TO_STATUS_FKEY_001 
    FOREIGN KEY (STATUS_ID)
    REFERENCES STATUS_MASTER (STATUS_ID)
    ;

-- Reference:  FROM_TO_STATUS_FKEY_002 (table: FROM_TO_STATUS)


ALTER TABLE FROM_TO_STATUS ADD CONSTRAINT FROM_TO_STATUS_FKEY_002 
    FOREIGN KEY (TO_STATUS_ID)
    REFERENCES STATUS_MASTER (STATUS_ID)
    ;

-- Reference:  FROM_ZIPCODE_FKEY_001 (table: ZIPCODE_COSTS)


ALTER TABLE ZIPCODE_COSTS ADD CONSTRAINT FROM_ZIPCODE_FKEY_001 
    FOREIGN KEY (FROM_ZIPCODE)
    REFERENCES ZIPCODE_MASTER (ZIPCODE)
    ;

-- Reference:  ROLE_PERMISSION_PERMISSION (table: ROLE_PERMISSION)


ALTER TABLE ROLE_PERMISSION ADD CONSTRAINT ROLE_PERMISSION_PERMISSION 
    FOREIGN KEY (PERMISSION_ID)
    REFERENCES PERMISSION (PERMISSION_ID)
    ;

-- Reference:  ROLE_PERMISSION_ROLE (table: ROLE_PERMISSION)


ALTER TABLE ROLE_PERMISSION ADD CONSTRAINT ROLE_PERMISSION_ROLE 
    FOREIGN KEY (ROLE_ID)
    REFERENCES ROLE (ROLE_ID)
    ;

-- Reference:  TO_ZIPCODE_FKEY_002 (table: ZIPCODE_COSTS)


ALTER TABLE ZIPCODE_COSTS ADD CONSTRAINT TO_ZIPCODE_FKEY_002 
    FOREIGN KEY (TO_ZIPCODE)
    REFERENCES ZIPCODE_MASTER (ZIPCODE)
    ;

-- Reference:  USER_ROLE_PERMISSION_USERS (table: USER_ROLE_PERMISSION)


ALTER TABLE USER_ROLE_PERMISSION ADD CONSTRAINT USER_ROLE_PERMISSION_USERS 
    FOREIGN KEY (USER_ID)
    REFERENCES USERS (USER_ID)
    ;

-- Reference:  USER_ROLE_PERM_PKEY (table: USER_ROLE_PERMISSION)


ALTER TABLE USER_ROLE_PERMISSION ADD CONSTRAINT USER_ROLE_PERM_PKEY 
    FOREIGN KEY (ROLE_PERMISSION_ID)
    REFERENCES ROLE_PERMISSION (ROLE_PERMISSION_ID)
    ;



-- End of file.

